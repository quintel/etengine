- content_for(:title, 'Scenario')

= render "inspect/shared/inspect_subnav"

%div{ style: 'float: right' }
  = link_to 'Edit scenario', edit_inspect_scenario_path(@scenario), class: 'btn btn-primary'

.row
  .span8
    %table.table
      %tr
        %th Area
        %td= @scenario.area_code
      %tr
        %th End Year
        %td= @scenario.end_year
      %tr
        %th Users
        %td
          - if @scenario.scenario_users.present?
            - @scenario.scenario_users.each do |scenario_user|
              = link_to("#{scenario_user.user.name} (#{User::ROLES[scenario_user.role_id].to_s.humanize})", user_path(scenario_user.user))
          - else
            %span.muted No owner
      %tr
        %th Source
        %td= @scenario.source
      - if @scenario.preset_scenario_id.present?
        %th Preset
        %td
          = preset_or_scenario_edge(@scenario.preset_scenario_id)
      %tr
        %th Created
        %td= @scenario.created_at.to_formatted_s(:long)
      %tr
        %th Last updated
        %td= @scenario.updated_at.to_formatted_s(:long)
      %tr
        %th Visibility
        %td
          - if @scenario.private?
            %span.tag.private
              = inline_svg_tag 'font-awesome/16/lock.svg'
              Private
          - else
            %span.tag.gray Public
      %tr
        %th Compatibility
        %td= formatted_scenario_compatibility(@scenario)

.row
  .span10
    - {future: @scenario.inputs.future, present: @scenario.inputs.present}.each do |name, inputs|

      %h3== Inputs #{name}
      - if inputs.empty?
        %p No updates
      - else
        %table.table.table-condensed
          %thead
            %tr
              %th.span1 id
              %th.span6 key
              %th.span1.tar value
              %td.span1.tar min
              %td.span1.tar max
          %tbody
            - inputs.group_by{|h| h.first.share_group.to_s }.each do |share_group, input_value|
              %tr
                %td(colspan=2)
                  %strong
                    = share_group.present? ? share_group : "no share group"
                %td.tar
                  - if share_group.present?
                    = auto_number input_value.map(&:last).compact.sum rescue 'error'
                %td(colspan=2)

              - input_value.sort_by{|iv| iv.first.key.to_s}.each do |input, value|
                %tr
                  %td.tar= input.id
                  %td= input.key
                  %td.tar
                    %strong= auto_number value rescue 'error'
                  %td.tar= auto_number input.min_value_for(@scenario) rescue 'error'
                  %td.tar= auto_number input.max_value_for(@scenario) rescue 'error'
