- if params[:log]
  %p
    = session[:user_values]
  %hr
  %p
    = session[:update_statements]
    = link_to 'reset', '/scenario/reset'
  
%h4
  Unexpected 
  %br
  - if unhappy = Current.gql.present.converters.select{|c| c.query.demand_expected? == false}.length
    == #{ "&#x2639;".html_safe * unhappy }
    = "everybody's happy" if unhappy == 0
  - else
    error

%table{table_defaults}
  %thead
    %tr
      %th ID
      %th Name
      %th Demand
      %th Preset Demand
      %th Co2 (primary)

  - Current.gql.present.converters.sort_by(&:id).each do |converter|
    %tr{cycles}
      %td{:style => "text-align: right"}== ##{converter.id}
      %td
        = converter.name
        
        %small{:style => "color: #666"}
          == [#{converter.full_key}]
          == {#{converter.groups.map(&:key).join(', ')}}
      %td{:style => "text-align: right"}
        - demand_value(converter)
      %td{:style => "text-align: right"}= converter.preset_demand
      %td{:style => "text-align: right"}= (converter.primary_co2_emission / 10**9).round(3) rescue nil
        