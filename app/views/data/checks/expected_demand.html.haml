= render "data/shared/data_subnav"

.header Check if present demand matches demand_expected_value.

- @converters = @gql.present_graph.converters.map(&:query).sort_by{|c| c.excel_id || 0}
- sad_converters = @converters.select{|c| c.demand_expected? == false }

%p
  %h2
    - if sad_converters.any?
      Demand not expected: #{sad_converters.length} converters are unhappy. :-(
    - else
      So far so good!

- if sad_converters.any?
  %table.table.table-condensed
    %thead
      %tr
        %th Id
        %th Key
        %th Demand
        %th Expected
        %th
    %tbody
      - sad_converters.each do |converter|
        - key = converter.key
        %tr
          %td
            %a{:id => key}= converter.dataset_get(:excel_id)
          %td= link_to key, data_converter_path(:id => key)
          %td.align-right= auto_number converter.demand
          %td.align-right= auto_number converter.demand_expected_value
          %td
            &nbsp;
            - if converter.demand_expected? == false
              \:-(
            &nbsp;

%h2 All converters
%table.table.table-condensed
  %thead
    %tr
      %th Id
      %th Key
      %th Demand
      %th Expected
      %th
  %tbody
    - @converters.each do |converter|
      - key = converter.key
      %tr
        %td
          %a{:id => key}= converter.dataset_get(:excel_id)
        %td= link_to key, data_converter_path(:id => key)
        %td.align-right= auto_number converter.demand
        %td.align-right= auto_number converter.demand_expected_value
        %td
          &nbsp;
          - if converter.demand_expected? == false
            \:-(
          &nbsp;
