-# This is a temporary view. Remove when the old scenarios have been updated
- breadcrumb link_to 'Scenarios', data_scenarios_path
- breadcrumb link_to "##{@scenario.id} #{@scenario.title}", data_scenario_path(:id => @scenario.id)
- breadcrumb 'fix'

:ruby
  inputs = @scenario.user_values
  
  input_ids = [344,341,343,242]  
  number_of_inputs_set = input_ids.map{|id| inputs[id]}.compact.count
  
  old_344 = inputs[344]
  old_341 = inputs[341]
  old_343 = inputs[343]
  old_242 = inputs[242]
  
  if number_of_inputs_set == 0
    msg = 'No inputs set, I\'m not changing anything'
  elsif number_of_inputs_set == 4
    msg = 'All inputs set, this is the new data'
  else
    
    inputs[344] ||= 0.0
    inputs[341] ||= 4.4
    inputs[343] ||= 0.0
    inputs[242] ||= 0.0
  
    msg = "Some inputs are set (#{number_of_inputs_set}), I update the missing one with defaults and apply these values"
  end
  
%h2 Fixing scenario

%p= msg
%p If the new value is NaN then nil will be stored

:ruby
  sum = input_ids.map{|id| inputs[id]}.compact.sum.to_f
  i344_new = inputs[344] / sum * 100 rescue nil
  i341_new = inputs[341] / sum * 100 rescue nil
  i343_new = inputs[343] / sum * 100 rescue nil
  i242_new = inputs[242] / sum * 100 rescue nil
  i582_new = sum
  
%table
  %tr
    %td Input
    %td Was
    %td After defaults
    %td new
  %tr
    %td Geothermal (344):
    %td= old_344
    %td= inputs[344]
    %td= i344_new
  %tr
    %td District Heating (341)
    %td= old_341
    %td= inputs[341]
    %td= i341_new
  %tr
    %td Biomass CHP (343)
    %td= old_343
    %td= inputs[343]
    %td= i343_new
  %tr
    %td Gas CHP (242)
    %td= old_242
    %td= inputs[242]
    %td= i242_new
  %tr
    %td Space heating from district heating(582)
    %td (new)
    %td
    %td= i582_new

- unless params[:force]
  = button_to 'update_record', fix_data_scenario_path(:id => @scenario.id, :force => true), :method => :put, :confirm => 'are you sure?'  
  